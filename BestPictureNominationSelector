import random
import tkinter as tk
from tkinter import messagebox
import requests
import webbrowser

def choose_movie():
    chosen_line = random.choice(lines)
    print(f"Movie Selected: {chosen_line}")

    movie_title = chosen_line.split('\t')[0]
    print(movie_title) 

    url = "https://streaming-availability.p.rapidapi.com/shows/search/title"
    querystring = {
        #"title": movie_title,
        "title": "Die Hard with a Vengeance",
        "country": "us",
        "show_type": "movie"
    }

    headers = {
	"x-rapidapi-key": "7f84ac6968msh506e9250e00e425p122fc7jsn8dccfbd2494f",
	"x-rapidapi-host": "streaming-availability.p.rapidapi.com"
    }

    response = requests.get(url, headers=headers, params=querystring)
    print(response.status_code) 
    if response.status_code != 200:
        print("Error fetching data from the API.")
    else:

        #data = response.json()
        #results = data  # data is already a list of results
        #if results:
            #first_result = results[0]
            #title = first_result["title"]
            #services = first_result.get("streamingOptions", {}).get("us", {})
            
            #print(f"\nðŸŽ¬ Found: {title}")

            #or service in services:
                #service_name = service.get("name")
                #link = service.get("link")
                #webbrowser.open(link) 


            data = response.json()
            results = data  # already a list
            if results:
                first_result = results[0]
                title = first_result["title"]
                services = first_result.get("streamingOptions", {}).get("us", {})

                html_lines = [f"<h2>ðŸŽ¬ {title}</h2><ul>"]

                for service in services:
                    name = service.get("name", "Unknown Service")
                    link = service.get("link", "#")
                    html_lines.append(f'<li><a href="{link}" target="_blank">{name}</a></li>')

                html_lines.append("</ul>")
                html_content = "\n".join(html_lines)

                # Save to HTML file and open in browser
                with open("movie_links.html", "w", encoding="utf-8") as f:
                    f.write(html_content)

                webbrowser.open("movie_links.html")
            else:
                print("No streaming information found for this movie.")

    return chosen_line

    #return chosen_line

def movie_selected():
    # Remove selected movie from the unwatched list
    if chosen_line in lines:
        lines.remove(chosen_line)
    else:
        print("Error: Selected movie not found in the list.")
    

    # Overwrite the source file with remaining lines
    with open(source_file, 'w') as file:
        for line in lines:
           file.write(line + '\n')

    # Step 6: Append the chosen line to the used file
    with open(used_file, 'a') as file:
        file.write(chosen_line + '\n')

# File paths
source_file = 'OscarBestPicturesNotWatched.txt'
used_file = 'OscarBestPicturesWatched.txt'

root = tk.Tk()
root.withdraw()

# Open the Nomination list of Movies not watched yet
with open(source_file, 'r') as file:
    lines = [line.strip() for line in file if line.strip()] 

# Check if list is empty
if not lines:
    print("The source file is empty.")
else:

    chosen_line = None 
    chosen_line = choose_movie()

    whileBool = True
    while whileBool:
        result = messagebox.askyesno("Movie Selected", f"{chosen_line}")

        if result:
            whileBool = False
            print("You chose YES")
            # movie_selected()
        else:
            print("You chose NO")
            chosen_line = choose_movie()